package driver

import (
	"fmt"
	"github.com/yoojia/edgex"
)

//
// Author: 陈哈哈 yoojiachen@gmail.com
//

func main() {
	edgex.Run(func(ctx edgex.Context) error {
		// 向系统注册节点
		driver, ri := ctx.NewDriver(edgex.DriverOptions{
			Name: "EXAMPLE-DRIVER",
			Topics: []string{
				"/examples/+/tcp",
				"/examples/+/udp",
			},
		})

		for {
			select {
			case in := <-driver.Inputs():
				// 接收到消息，并处理。调用Request来驱动其它终端
				// 向特定UUID的Device发起请求，并获取响应
				if resp, err := driver.Request(&edgex.Message{
					Uuid:    ri.Uuid,
					Payload: in.Payload,
				}); nil != err {
					return err
				} else {
					fmt.Println("Resp: ", resp)
					driver.Outputs() <- &edgex.Message{
						Sid:  in.Sid,
						Uuid: in.Uuid,
						Payload: []byte("PONG"),
					}
				}

			case err := <-ctx.WaitCh():
				return err

			}
		}

	})
}
